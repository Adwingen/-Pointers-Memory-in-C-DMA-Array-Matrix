#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>


void print2DDynamicMatrix(int** a, int rows, int columns)
{
    int i, j;
    for (i = 0; i < rows; i++) // i->>rows
    {
        for (j = 0; j < columns; j++)
            printf("%10d", a[i][j]);

        printf("\n");
    }
   
}


void allocate2DMatrixByRef(int rows, int columns, int*** a)
{
    int** myMat;
    int i;

    myMat = (int**)calloc(rows, sizeof(int));
    if (!myMat)
        exit(0);

    for (i = 0; i < rows; i++)  //allocating an array of integers for every row
    {

        myMat[i] = (int*)calloc(columns, sizeof(int));
        if (!myMat[i])
        {
            // TODO --> freeMatrix
            exit(1);
        }

    }

    *a = myMat;
}

void allocate2DMatrixByRefOpcional(int rows, int columns, int*** a)
{
   
    int i,j;

    *a = (int**)calloc(rows, sizeof(int));
    if (!*a)
        exit(0);

    for (i = 0; i < rows; i++)  //allocating an array of integers for every row
    {

        (*a)[i] = (int*)calloc(columns, sizeof(int));
        if (!(*a)[i])
        {
            // TODO --> freeMatrix
            exit(1);
        }

    }

    // insert the numbers

    for (i = 0; i < rows; i++)//colomns
    {
        for (j = 0; j < rows; j++)//row
        {
                
            if (i>=j)
            {
                printf("Enter the number to input in [%d][%d] :", i, j);
                scanf("%d", &(*a)[i][j]);

            }
               
        }

    }


}

int main()
{
    int rows, columns;
    int** myMat;

    printf("Enter rows: ");
    scanf("%d", &rows);
    printf("Enter columns: ");
    scanf("%d", &columns);

    allocate2DMatrixByRefOpcional(rows, columns, &myMat);

    print2DDynamicMatrix(myMat, rows, columns);

    return 0;
}
